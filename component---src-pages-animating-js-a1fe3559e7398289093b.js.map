{"version":3,"sources":["webpack:///./src/pages/animating.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/classes/CanvasCircle.js"],"names":["IndexPage","canvas","useRef","animationFrame","circles","useEffect","current","width","window","innerWidth","height","innerHeight","ctx","getContext","clearRect","Array","from","forEach","v","i","radius","Math","ceil","random","color","x","y","dx","dy","c","Circle","draw","push","animateCircle","animate","requestAnimationFrame","cancelAnimationFrame","title","ref","$export","P","fill","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","CanvasCircle","beginPath","arc","PI","fillStyle","mouseX","mouseY","circleXPosition","circleYPosition","maxRadius","minRadius","floor"],"mappings":"4JA0DeA,UApDG,WAChB,IAAMC,EAASC,iBAAO,MAChBC,EAAiBD,iBAAO,MACxBE,EAAUF,iBAAO,IA0CvB,OA7BAG,qBAAU,WACRJ,EAAOK,QAAQC,MAAQC,OAAOC,WAC9BR,EAAOK,QAAQI,OAASF,OAAOG,YAC/B,IAAMC,EAAMX,EAAOK,QAAQO,WAAW,MAqBtC,OApBAD,EAAIE,UAAU,EAAG,EAAGN,OAAOC,WAAYD,OAAOG,aAC9CP,EAAQE,QAAU,GAElBS,MAAMC,KAAK,IAAID,MAAM,KAAKE,SAAQ,SAACC,EAAGC,GACpC,IAAMC,EAASC,KAAKC,KAAqB,GAAhBD,KAAKE,UAAiB,GACzCC,EAAK,QAA2B,IAAhBH,KAAKE,SAAhB,KACT,IAD4CF,KAAKE,SAAxC,KACe,IAAhBF,KAAKE,SADJ,SAGLE,EAAIJ,KAAKE,UAAYf,OAAOC,WAAsB,EAATW,GAAcA,EAAS,EAChEM,EAAIL,KAAKE,UAAYf,OAAOG,YAAuB,EAATS,GAAcA,EAAS,EAEjEO,GAAMR,EAAI,GAAM,GAAK,EAAI,GAAKE,KAAKE,SAAW,EAC9CK,GAAMT,EAAI,GAAM,EAAI,GAAK,GAAKE,KAAKE,SAAW,EAC9CM,EAAI,IAAIC,IAAO,CAAEL,IAAGC,IAAGC,KAAIC,KAAIR,SAAQI,UAC7CK,EAAEE,KAAKnB,GACPR,EAAQE,QAAQ0B,KAAKH,MAGvB1B,EAAeG,QAjCK,SAAhB2B,IACJ,IAAMrB,EAAMX,EAAOK,QAAQO,WAAW,MACtCD,EAAIE,UAAU,EAAG,EAAGN,OAAOC,WAAYD,OAAOG,aAE9CP,EAAQE,QAAQW,SAAQ,SAAAY,GACtBA,EAAEK,QAAQtB,MAGZT,EAAeG,QAAU6B,sBAAsBF,GAyBtBA,GAElB,WACLG,qBAAqBjC,EAAeG,aAKtC,kBAAC,IAAD,CAAQ+B,MAAM,aACZ,4BAAQC,IAAKrC,O,oBCpDnB,IAAIsC,EAAU,EAAQ,GAEtBA,EAAQA,EAAQC,EAAG,QAAS,CAAEC,KAAM,EAAQ,OAE5C,EAAQ,IAAR,CAAiC,S,iCCHjC,IAAIC,EAAW,EAAQ,IACnBC,EAAkB,EAAQ,KAC1BC,EAAW,EAAQ,IACvBC,EAAOC,QAAU,SAAcC,GAO7B,IANA,IAAIC,EAAIN,EAASO,MACbC,EAASN,EAASI,EAAEE,QACpBC,EAAOC,UAAUF,OACjBG,EAAQV,EAAgBQ,EAAO,EAAIC,UAAU,QAAKE,EAAWJ,GAC7DK,EAAMJ,EAAO,EAAIC,UAAU,QAAKE,EAChCE,OAAiBF,IAARC,EAAoBL,EAASP,EAAgBY,EAAKL,GACxDM,EAASH,GAAOL,EAAEK,KAAWN,EACpC,OAAOC,I,wCCuCMS,IAnDb,YAA8C,IAAD,OAA/BhC,EAA+B,EAA/BA,EAAGC,EAA4B,EAA5BA,EAAGC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,GAAIR,EAAiB,EAAjBA,OAAQI,EAAS,EAATA,MAAS,KAW7CO,KAAO,SAAAnB,GACLA,EAAI8C,YACJ9C,EAAI+C,IAAI,EAAKlC,EAAG,EAAKC,EAAG,EAAKN,OAAQ,EAAa,EAAVC,KAAKuC,IAAQ,GACrDhD,EAAIiD,UAAY,EAAKrC,MACrBZ,EAAI6B,QAfuC,KAkB7CP,QAAU,SAACtB,EAAKkD,EAAQC,GAYtB,IAXI,EAAKtC,EAAIjB,OAAOC,WAAa,EAAKW,QAAU,EAAKK,EAAI,EAAKL,UAC5D,EAAKO,IAAM,EAAKA,KAGd,EAAKD,EAAIlB,OAAOG,YAAc,EAAKS,QAAU,EAAKM,EAAI,EAAKN,UAC7D,EAAKQ,IAAM,EAAKA,IAGlB,EAAKH,GAAK,EAAKE,GACf,EAAKD,GAAK,EAAKE,QAEA0B,IAAXQ,QAAmCR,IAAXS,EAAsB,CAChD,IAAMC,EAAkBF,EAAS,EAAKrC,EAChCwC,EAAkBF,EAAS,EAAKrC,EAGpCsC,EAAkB,IAClBA,GAAmB,IACnBC,EAAkB,IAClBA,GAAmB,IACnB,EAAK7C,QAAU,EAAK8C,UAEpB,EAAK9C,QAAU,EACN,EAAKA,QAAU,EAAK+C,YAC7B,EAAK/C,QAAU,GAInB,EAAKW,KAAKnB,IA9CVqC,KAAK7B,OAASA,EACd6B,KAAKkB,UAAY/C,EACjB6B,KAAKiB,UAAY,GACjBjB,KAAKzB,MAAQA,EACbyB,KAAKxB,EAAIJ,KAAK+C,MAAM3C,GACpBwB,KAAKvB,EAAIL,KAAK+C,MAAM1C,GACpBuB,KAAKtB,GAAKN,KAAK+C,MAAMzC,GACrBsB,KAAKrB,GAAKP,KAAK+C,MAAMxC","file":"component---src-pages-animating-js-a1fe3559e7398289093b.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Layout from '../components/layout';\nimport Circle from '../classes/CanvasCircle';\n\nimport '../styles/canvas.css';\n\nconst IndexPage = () => {\n  const canvas = useRef(null);\n  const animationFrame = useRef(null);\n  const circles = useRef([]);\n\n  const animateCircle = () => {\n    const ctx = canvas.current.getContext('2d');\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\n    circles.current.forEach(c => {\n      c.animate(ctx);\n    });\n\n    animationFrame.current = requestAnimationFrame(animateCircle);\n  };\n\n  useEffect(() => {\n    canvas.current.width = window.innerWidth;\n    canvas.current.height = window.innerHeight;\n    const ctx = canvas.current.getContext('2d');\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    circles.current = [];\n\n    Array.from(new Array(50)).forEach((v, i) => {\n      const radius = Math.ceil(Math.random() * 30) + 10;\n      const color = `rgba(${Math.random() * 255}, ${Math.random() *\n        255}, ${Math.random() * 255}, 0.5)`;\n\n      const x = Math.random() * (window.innerWidth - radius * 2) + radius + 5;\n      const y = Math.random() * (window.innerHeight - radius * 2) + radius + 5;\n\n      const dx = (i % 2 === 0 ? -5 : 5) * Math.random() + 3;\n      const dy = (i % 2 === 0 ? 5 : -5) * Math.random() + 3;\n      const c = new Circle({ x, y, dx, dy, radius, color });\n      c.draw(ctx);\n      circles.current.push(c);\n    });\n\n    animationFrame.current = animateCircle();\n\n    return () => {\n      cancelAnimationFrame(animationFrame.current);\n    };\n  });\n\n  return (\n    <Layout title=\"Animating\">\n      <canvas ref={canvas} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","class CanvasCircle {\n  constructor({ x, y, dx, dy, radius, color }) {\n    this.radius = radius;\n    this.minRadius = radius;\n    this.maxRadius = 30;\n    this.color = color;\n    this.x = Math.floor(x);\n    this.y = Math.floor(y);\n    this.dx = Math.floor(dx);\n    this.dy = Math.floor(dy);\n  }\n\n  draw = ctx => {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  };\n\n  animate = (ctx, mouseX, mouseY) => {\n    if (this.x > window.innerWidth - this.radius || this.x < this.radius) {\n      this.dx = -this.dx;\n    }\n\n    if (this.y > window.innerHeight - this.radius || this.y < this.radius) {\n      this.dy = -this.dy;\n    }\n\n    this.x += this.dx;\n    this.y += this.dy;\n\n    if (mouseX !== undefined && mouseY !== undefined) {\n      const circleXPosition = mouseX - this.x;\n      const circleYPosition = mouseY - this.y;\n\n      if (\n        circleXPosition < 50 &&\n        circleXPosition > -50 &&\n        circleYPosition < 50 &&\n        circleYPosition > -50 &&\n        this.radius <= this.maxRadius\n      ) {\n        this.radius += 1;\n      } else if (this.radius >= this.minRadius) {\n        this.radius -= 1;\n      }\n    }\n\n    this.draw(ctx);\n  };\n}\n\nexport default CanvasCircle;\n"],"sourceRoot":""}